#!/usr/bin/env python
# -*- coding: utf-8

import sys

import anvio
import anvio.kegg as kegg

from anvio.errors import ConfigError, FilesNPathsError
from anvio.terminal import time_program

__author__ = "Developers of anvi'o (see AUTHORS.txt)"
__copyright__ = "Copyleft 2015-2020, the Meren Lab (http://merenlab.org/)"
__license__ = "GPL 3.0"
__version__ = anvio.__version__
__maintainer__ = "Iva Veseli"
__email__ = "iveseli@uchicago.edu"
__requires__ = ["contigs-db", "kofam-data", "kegg-modules-db", "kegg-functions",]
#__provides__ = ["genome-metabolism", "genome-metabolism-txt",] #TODO: update when finished
__description__ = "Reconstructs metabolic pathways and estimates pathway completeness for a given set of contigs."


@time_program
def main(args):
    m = kegg.KeggMetabolismEstimator(args)
    # call estimate driver function
    print("Sorry, nothing is implemented yet. :(")

if __name__ == '__main__':
    import argparse

    parser = argparse.ArgumentParser(description=__description__)

    groupI = parser.add_argument_group('INPUT', "The minimum you must provide this program is a contigs database. In which case\
                                                    anvi'o will attempt to estimate metabolism for all contigs in it, assuming that\
                                                    the contigs database represents a single genome. If the contigs database is actually\
                                                    a metagenome, you should use the `--metagenome` flag to explicitly declare that.")
    groupI.add_argument(*anvio.A('contigs-db'), **anvio.K('contigs-db', {'required': True}))
    groupI.add_argument(*anvio.A('metagenome-mode'), **anvio.K('metagenome-mode'))
    groupI.add_argument(*anvio.A('kegg-data-dir'), **anvio.K('kegg-data-dir'))

    args = anvio.get_args(parser)

    try:
        main(args)
    except ConfigError as e:
        print(e)
        sys.exit(-1)
    except FilesNPathsError as e:
        print(e)
        sys.exit(-1)
