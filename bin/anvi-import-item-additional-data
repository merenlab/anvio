#!/usr/bin/env python
# -*- coding: utf-8
"""Populate additional data tables"""

import sys
import argparse


import anvio
import anvio.dbops as dbops

from anvio.errors import ConfigError, FilesNPathsError


__author__ = "Developers of anvi'o (see AUTHORS.txt)"
__copyright__ = "Copyleft 2015-2018, the Meren Lab (http://merenlab.org/)"
__credits__ = []
__license__ = "GPL 3.0"
__version__ = anvio.__version__
__email__ = "a.murat.eren@gmail.com"


def main(args):
    # - you're ugly.
    # - no u :(
    dbops.TableForItemAdditionalData(args).populate_from_file(args.data_file, skip_check_names=dbops.is_blank_profile(args.pan_or_profile_db))


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description="Import items additional data into pan and profile databases")

    parser.add_argument('data_file', metavar = "TAB DELIMITED FILE", help = 'The input file that describes additional data\
                        for each item. See this is as a table, where each the first column of each row is a split name,\
                        or a gene cluster id, and each column is a data. Here is an example: https://goo.gl/3ACBgL. \
                        To get an example file to populate, you can use the program anvi-export-items-additional-data.')

    parser.add_argument(*anvio.A('pan-or-profile-db'), **anvio.K('pan-or-profile-db'))
    parser.add_argument(*anvio.A('just-do-it'), **anvio.K('just-do-it'))

    args = anvio.get_args(parser)

    try:
        main(args)
    except ConfigError as e:
        print(e)
        sys.exit(-1)
    except FilesNPathsError as e:
        print(e)
        sys.exit(-2)
