#!/usr/bin/env python
# -*- coding: utf-8

import argparse
import os
import re
import sys
import time
from collections import Counter

import anvio
import anvio.taxoestimation as taxoestimation
import anvio.fastalib as f
import anvio.terminal as terminal


__author__ = "Developers of anvi'o (see AUTHORS.txt)"
__copyright__ = "Copyleft 2015-2018, the Meren Lab (http://merenlab.org/)"
__credits__ = []
__license__ = "GPL 3.0"
__version__ = anvio.__version__
__maintainer__ = "Quentin Clayssen"
__email__ = "quentin.clayssen@gmail.com"


run = terminal.Run()
progress = terminal.Progress()

#def main(args):





if __name__ == '__main__':
    import argparse

    parser = argparse.ArgumentParser(description="Create diamond database matching with match between import fasta of SCGs with taxonomy and HMM from anvi'o.")
    groupH = parser.add_argument_group('Taxonomy', "Taxomy assignation Argument\
                                        /!\.")

    groupH.add_argument(*anvio.A('contigs-db'), **
                        anvio.K('contigs-db', {'required': True}))
    parser.add_argument(*anvio.A('num-threads'), **anvio.K('num-threads'))
    groupH.add_argument(*anvio.A('taxonomy-database'),** anvio.K('taxonomy-database'))
    # , help="cutoff for consider taxonomie to the best taxonomie score . Default value 0.98")
    groupH.add_argument(*anvio.A('cut_off_methode'), **anvio.K('cut_off_methode'))
    # , help="method chosen for estimation of taxonomy ")
    groupH.add_argument(*anvio.A('methode'), **anvio.K('methode'))
    parser.add_argument('--metagenome', default=False, action="store_true", help="metagenomes")

    groupH.add_argument(*anvio.A('bin-id'), **anvio.K('bin-id'))
    #parser.add_argument(*anvio.A('list-states'), **anvio.K('list-states'))

    args = anvio.get_args(parser)

    try:
        t = taxoestimation.SCGsTaxomy(args)
        t.estimate_taxonomy()
    except ConfigError as e:
        print(e)
        sys.exit(-1)
    except FilesNPathsError as e:
        print(e)
        sys.exit(-2)
