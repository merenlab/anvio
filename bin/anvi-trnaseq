#!/usr/bin/env python
# -*- coding: utf-8
"""tRNA-seq data analysis workflow"""

import sys

import anvio
import anvio.trnaseq as trnaseq
import anvio.terminal as terminal

from anvio.errors import ConfigError, FilesNPathsError


__author__ = "Developers of anvi'o (see AUTHORS.txt)"
__copyright__ = "Copyleft 2015-2020, the Meren Lab (http://merenlab.org/)"
__credits__ = []
__license__ = "GPL 3.0"
__version__ = anvio.__version__
__maintainer__ = "Samuel Miller"
__email__ = "samuelmiller10@gmail.com"
__provides__ = ['trnaseq-db']
__description__ = ("An anvi'o script to process a tRNA-seq dataset, generating a tRNA-seq database.")


if __name__ == '__main__':
    import argparse
    parser = argparse.ArgumentParser(description=__description__)

    groupA = parser.add_argument_group('MANDATORY')
    groupA.add_argument(*anvio.A('fasta-file'),
                        **anvio.K('fasta-file',
                                  {'help': "A FASTA file of tRNA-seq reads. "
                                   "tRNA-seq chemistry works from the 3' acceptor (CCA) end of the tRNA molecule, "
                                   "extending in the 5' direction."}))
    groupA.add_argument(*anvio.A('project-name'), **anvio.K('project-name'))
    groupA.add_argument(*anvio.A('output-dir'), **anvio.K('output-dir', {'metavar':'TRNASEQ_DB_DIR'}))

    groupB = parser.add_argument_group('OTHERS')
    groupB.add_argument(*anvio.A('description'), **anvio.K('description'))
    groupB.add_argument(*anvio.A('skip-fasta-check'), **anvio.K('skip-fasta-check'))
    groupB.add_argument(*anvio.A('num-threads'), **anvio.K('num-threads'))
    groupB.add_argument(*anvio.A('write-buffer-size'), **anvio.K('write-buffer-size', {'default': 50000}))

    args = anvio.get_args(parser)
    try:
        trnaseq_dataset = trnaseq.TRNASeqDataset(args)
        trnaseq_dataset.process()
    except ConfigError as e:
        print(e)
        sys.exit(-1)
    except FilesNPathsError as e:
        print(e)
        sys.exit(-2)
