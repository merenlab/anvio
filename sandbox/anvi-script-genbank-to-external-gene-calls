#!/usr/bin/env python
# -*- coding: utf-8

import sys

import anvio
import anvio.terminal as terminal

from anvio.contigops import GenbankToAnvio
from anvio.errors import ConfigError, FilesNPathsError


__author__ = "Developers of anvi'o (see AUTHORS.txt)"
__copyright__ = "Copyleft 2015-2018, the Meren Lab (http://merenlab.org/)"
__credits__ = []
__license__ = "GPL 3.0"
__version__ = anvio.__version__
__maintainer__ = "Mike Lee"
__email__ = "michael.lee0517@gmail.com"


run = terminal.Run()
progress = terminal.Progress()


if __name__ == '__main__':
    import argparse

    parser = argparse.ArgumentParser(description="This script takes a genbank file and converts it into the\
                                                format required for importing external gene calls and functions into anvi'o.")

    parser.add_argument('-i', '--input_gb', action='store', dest='input_gb', required=True,
                        help='input Genbank file (e.g. typically"*.gbk", "*.gb", "*.gbff")')
    parser.add_argument('-s', '--annotation_source', action='store', dest='annotation_source', default='NCBI_PGAP',
                        help='annotation source (default: "NCBI_PGAP")')
    parser.add_argument("-v", "--annotation_version", action="store", dest="annotation_version", default="v4.6",\
                        help='Annotation source version (default: "v4.6")')
    parser.add_argument("-o", "--output_gene_calls_tsv", action="store", dest="output_gene_calls_tsv",
                        default="external_gene_calls.tsv",\
                        help='Output tsv file (default: "external_gene_calls.tsv")')
    parser.add_argument("-a", "--output_functions_tsv", action="store", dest="output_functions_tsv",
                        default="functions.tsv",\
                        help='Output functions file (default: "functions.tsv")')
    parser.add_argument("-f", "--output_fasta", action="store", dest="output_fasta", default="clean.fa",
                        help='Output fasta file with matching, simplified headers to be ready for\
                             `anvi-gen-contigs-db` (default: "clean.fa")')

    args = anvio.get_args(parser)

    try:
        genbank_to_anvio = GenbankToAnvio(args)
        genbank_to_anvio.process()
    except ConfigError as e:
        print(e)
        sys.exit(-1)
    except FilesNPathsError as e:
        print(e)
        sys.exit(-2)
